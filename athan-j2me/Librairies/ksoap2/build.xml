<?xml version="1.0" encoding="UTF-8"?>

<project name="ksoap2" default="build" basedir=".">
	<property name="build.dir" value="build" />
	<property name="version" value="2.1.2" />
	<property name="lib.dir" value="lib" />
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="midp_src.dir" value="src_midp" />
	<property name="j2se_src.dir" value="src_j2se" />
	<property name="servlet_src.dir" value="src_servlet" />
	<property name="extras_src.dir" value="src_extras" />
	<property name="src.build.dir" value="${build.dir}/src" />
	<property name="test.build.dir" value="${build.dir}/test" />
	<property name="lib.class.dir" value="libraryClasses" />
	<property name="dist.dir" value="dist" />
	<property name="api.dir" value="doc/api" />
	<property name="java.class.target.level" value="1.2" />
	<property name="java.class.source.level" value="1.2" />
	<property name="clover.directory.name" value="clover" />
	<property name="clover.pdf.name" value="${clover.directory.name}/coverage.pdf" />
	<property name="clover.db.name" value="mycoverage.db" />

	<path id="lib.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
			<exclude name="**/junit.jar" />
		</fileset>
	</path>
	<path id="junit.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/junit.jar" />
		</fileset>
	</path>

	<target name="init">
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="build" depends="build_src, build_j2me_full.jar, build_j2se_full.jar, build_j2me_nodeps.jar, build_j2me_core.jar, build_extras.jar" description="--> Builds all products." />

	<target name="release" depends="test,build" description="--> Builds all products and runs the tests." />

	<target name="test" depends="build.test.classes" description="--> Run the unit tests">
		<junit>
			<classpath refid="lib.classpath" />
			<classpath refid="junit.classpath" />
			<classpath path="${src.build.dir}" />
			<classpath path="${test.build.dir}" />
			<formatter type="brief" usefile="false" />
			<batchtest fork="yes" todir="." haltonfailure="true" haltonerror="true">
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="clover" depends="-init.clover, test" description="--> Runs clover test coverage report">
		<clover-report>
			<current outfile="${clover.pdf.name}" summary="yes">
				<format type="pdf" />
			</current>
		</clover-report>
		<clover-report>
			<current outfile="${clover.directory.name}">
				<format type="html" />
			</current>
		</clover-report>
	</target>

	<target name="-init.clover">
		<property name="clover.license.path" location="${user.home}/clover.license" />
		<taskdef resource="com/cenqua/ant/antlib.xml" classpath="lib/cenquatasks.jar" />
		<extendclasspath path="lib/clover.jar" />
		<taskdef resource="clovertasks" classpath="lib/clover.jar" />
		<mkdir dir="${clover.directory.name}" />
		<clover-setup initString="${clover.db.name}">
			<fileset dir=".">
				<exclude name="**/mock/**/*"/>
				<include name="**/*.java" />
			</fileset>
		</clover-setup>
	</target>


	<target name="clean" description="--> Cleans up built products">
		<delete dir="${dist.dir}" />
		<delete dir="${build.dir}" />
		<delete dir="${lib.class.dir}" />
		<delete dir="${api.dir}" />
		<delete file="tagdiff.xml" />
		<delete file="tagdiff.html" />
		<delete dir="${clover.directory.name}" />
		<delete>
			<fileset dir=".">
				<include name="${clover.db.name}*" />
			</fileset>
		</delete>
	</target>

	<target name="javadoc" description="--> Creates the javadoc for the ksoap2 source.">
		<delete dir="${api.dir}" />
		<mkdir dir="${api.dir}" />
		<javadoc public="yes" destdir="${api.dir}" author="true" version="true" use="true" windowtitle="KSoap 2 API">
			<classpath refid="lib.classpath" />
			<doctitle>KSoap 2 API</doctitle>
			<sourcepath location="${src.dir}" />
			<sourcepath location="${j2se_src.dir}" />
			<sourcepath location="${midp_src.dir}" />
			<sourcepath location="${servlet_src.dir}" />
			<sourcepath location="${extras_src.dir}" />
			<package name="org.ksoap2.*" />
		</javadoc>
	</target>

	<target name="build.test.classes" depends="build.classes">
		<mkdir dir="${test.build.dir}" />
		<javac destdir="${test.build.dir}" optimize="true" target="${java.class.target.level}" source="${java.class.source.level}" debuglevel="true">
			<classpath refid="lib.classpath" />
			<classpath refid="junit.classpath" />
			<classpath path="${src.build.dir}" />
			<src path="${test.dir}" />
			<src path="${midp_src.dir}" />
			<src path="${j2se_src.dir}" />
			<src path="${servlet_src.dir}" />
			<src path="${extras_src.dir}" />
		</javac>
	</target>

	<target name="build.classes" depends="init">
		<mkdir dir="${src.build.dir}" />
		<unzip src="${lib.dir}/kobjects-j2me.jar" dest="${lib.class.dir}" overwrite="true" />
		<unzip src="${lib.dir}/kxml2-2.2.2.jar" dest="${lib.class.dir}" overwrite="true" />
		<javac destdir="${src.build.dir}" optimize="true" target="${java.class.target.level}" source="${java.class.source.level}" debuglevel="none">
			<classpath refid="lib.classpath" />
			<src path="${src.dir}" />
			<src path="${midp_src.dir}" />
			<src path="${j2se_src.dir}" />
			<src path="${servlet_src.dir}" />
			<src path="${extras_src.dir}" />
		</javac>
	</target>

	<target name="build_j2me_full.jar" depends="build.classes" description="--> Builds a J2ME jar with full kXML and kobjects libraries contained within.">
		<jar jarfile="${dist.dir}/${ant.project.name}-j2me-full-${version}.jar">
			<fileset dir="${src.build.dir}">
				<include name="**/*.class" />
				<exclude name="**/HttpTransportSE.class" />
				<exclude name="**/HttpTransportBasicAuth.class" />
				<exclude name="**/SoapServlet.class" />
				<exclude name="**/ServiceConnectionSE.class" />
				<exclude name="**/MarshalFloat.class" />
				<include name="META-INF/**" />
			</fileset>
			<fileset dir="${lib.class.dir}">
				<include name="**/*.class" />
			</fileset>
		</jar>
	</target>

	<target name="build_j2me_core.jar" depends="build.classes" description="--> Builds a J2ME jar with minimal kXML and kobjects libraries included.">
		<jar jarfile="${dist.dir}/${ant.project.name}-j2me-core-${version}.jar">
			<fileset dir="${lib.class.dir}">
				<include name="**/IsoDate.class" />
				<include name="**/XmlPullParser.class" />
				<include name="**/Base64.class" />
				<include name="**/KXmlParser.class" />
				<include name="**/KXmlSerializer.class" />
				<include name="**/Node.class" />
				<include name="**/KXmlSerializer.class" />
				<include name="**/Element.class" />
				<include name="**/XmlSerializer.class" />
				<include name="**/XmlPullParserException.class" />
			</fileset>
			<fileset dir="${src.build.dir}">
				<include name="**/*.class" />
				<exclude name="**/HttpTransportSE.class" />
				<exclude name="**/HttpTransportBasicAuth.class" />
				<exclude name="**/SoapServlet.class" />
				<exclude name="**/ServiceConnectionSE.class" />
				<exclude name="**/MarshalFloat.class" />
				<include name="META-INF/**" />
			</fileset>
		</jar>
	</target>

	<target name="build_j2me_nodeps.jar" depends="build.classes" description="--> Builds a J2ME jar with no outside libraries contained.">
		<jar jarfile="${dist.dir}/${ant.project.name}-j2me-nodeps-${version}.jar">
			<fileset dir="${src.build.dir}">
				<include name="**/*.class" />
				<exclude name="**/HttpTransportSE.class" />
				<exclude name="**/ServiceConnectionSE.class" />
				<exclude name="**/HttpTransportBasicAuth.class" />
				<exclude name="**/SoapServlet.class" />
				<exclude name="**/MarshalFloat.class" />
				<include name="META-INF/**" />
			</fileset>
		</jar>
	</target>

	<target name="build_j2se_full.jar" depends="build.classes" description="--> Builds a J2SE jar with full kXML and kobjects libraries contained within.">
		<jar jarfile="${dist.dir}/${ant.project.name}-j2se-full-${version}.jar">
			<fileset dir="${src.build.dir}">
				<include name="**/*.class" />
				<exclude name="**/HttpTransport.class" />
				<exclude name="**/HttpTransportBasicAuth.class" />
				<exclude name="**/ServiceConnectionMidp.class" />
				<include name="META-INF/**" />
			</fileset>
			<fileset dir="${lib.class.dir}">
				<include name="**/*.class" />
			</fileset>
		</jar>
	</target>

	<target name="build_extras.jar" depends="build.classes" description="--> Builds a J2ME jar with extras included (eg. HttpTransportBasicAuth).">
		<jar jarfile="${dist.dir}/${ant.project.name}-j2me-extras-${version}.jar">
			<fileset dir="${src.build.dir}">
				<include name="**/HttpTransportBasicAuth.class" />
				<include name="META-INF/**" />
			</fileset>
		</jar>
	</target>

	<target name="build_src" depends="init,javadoc">
		<delete file="${dist.dir}/${ant.project.name}-src*.zip" />
		<zip zipfile="${dist.dir}/${ant.project.name}-src-${version}.zip">
			<fileset dir=".">
				<include name="*/**" />
				<exclude name=".*" />
				<exclude name="${build.dir}/**" />
				<exclude name="${dist.dir}/**" />
				<exclude name="${lib.class.dir}/**" />
			</fileset>
		</zip>
	</target>

	<target name="deploy.to.sf" depends="build">
		<ftp server="upload.sourceforge.net" userid="anonymous" remotedir="/incoming" password="sfdeploy@paddlethis.com">
			<fileset dir="${dist.dir}" />
		</ftp>
	</target>

</project>
